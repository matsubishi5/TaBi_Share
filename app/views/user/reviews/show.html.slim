= provide(:title, 'レビュー 詳細')

.row
  .page-header
    h3
      = @review.title

      - if user_signed_in?
        span id='likebutton_#{ @review.id }'
          = render 'user/reviews/likebutton', review: @review

      .score.margin-left--10px
        = @review.score
        | 点

.row
  #sampleCarousel.carousel.slide data-ride='carousel'
    ol.carousel-indicators
      li.active data-target='#sampleCarousel' data-slide-to='0'
      li data-target='#sampleCarousel' data-slide-to='1'
      li data-target='#sampleCarousel' data-slide-to='2'
    .carousel-inner role='listbox'
      - @review.images.each.with_index(1) do |image, index|
        - if index == 1
          .item.active
            = image_tag image.to_s, class: 'img-responsive img-rounded carousel-image'
        - else
          .item
            = image_tag image.to_s, class: 'img-responsive img-rounded carousel-image'
    a.left.carousel-control href='#sampleCarousel' role='button' data-slide='prev'
      span.glyphicon.glyphicon-chevron-left aria-hidden='true'
      span.sr-only
        | 前へ
    a.right.carousel-control href='#sampleCarousel' role='button' data-slide='next'
      span.glyphicon.glyphicon-chevron-right aria-hidden='true'
      span.sr-only
        | 次へ
  br

.row
  .col-xs-2

  .col-xs-8
    table.table
      tbody
        tr
          td
            = attachment_image_tag @review.user, :profile_image, fallback: 'others/no_image.jpg',size: '100x100', class: 'img-thumbnail img-responsive img-hover'
            = link_to @review.user.name, user_user_path(@review.user)
            | (
            = @review.user.age
            | 歳
            = @review.user.sex
            | ・
            = @review.is_value
            | )
            - @user = @review.user

            - if user_signed_in?
              - unless @user == current_user
                span id='followbutton_#{ @user.id }' class='margin-left--10px'
                  = render 'user/users/followbutton', user: @user
        tr
          td
            = @review.body

    - if @review.user === current_user
      .pull-right
        = link_to '編集', edit_user_tourist_spot_review_path(@review), class: 'btn btn-primary'
        = link_to '削除', user_tourist_spot_review_path(@review), method: :delete, data: { confirm: '本当に削除しますか？' }, class: 'btn btn-danger margin-left--10px'

  .col-xs-2

.row
  .col-xs-3

  .col-xs-6
    - if user_signed_in?
      = form_with model: @comment, url: user_tourist_spot_review_comments_path(@review.tourist_spot, @review), local: true, builder: CustomFormBuilder do |f|
        = f.label :title, 'タイトル'
        br
        = f.text_field :title, class: 'form-control'
        br
        = f.label :body, '本文'
        br
        = f.text_area :body, class: 'form-control', style: 'height: 100px;'
        br
        = f.hidden_field :review_id, value: @review.id
        = f.submit '投稿', class: 'btn btn-success btn-block'
        br

    - if @comments.present?
      .table-responsive
        table.table
          thead
            tr
              th.text-center
                | 投稿者
              th.text-center
                | タイトル
              th.text-center
                | 本文
              th.text-center
                | 投稿日時
              th.text-center

          tbody
            - @comments.each do |comment|
              tr
                td
                  = link_to user_user_path(comment.user) do
                    = attachment_image_tag comment.user, :profile_image, fallback: 'others/no_image.jpg', size: '50x50', class: 'img-thumbnail img-responsive img-hover'
                    span.margin-left--10px
                      = comment.user.name
                td
                  = comment.title
                td
                  = comment.body
                td
                  = comment.created_at.to_s(:datetime_jp)
                td
                  - if comment.user === current_user
                    = link_to '編集', edit_user_tourist_spot_review_comment_path(@review.tourist_spot, @review, comment), class: 'btn btn-primary'
                    = link_to '削除', user_tourist_spot_review_comment_path(@review.tourist_spot, @review, comment), method: :delete, data: { confirm: '本当に削除しますか？' }, class: 'btn btn-danger'

    - else
      p.review__text
        | コメントはありません。

  .col-xs-3

.row
  = paginate @comments
