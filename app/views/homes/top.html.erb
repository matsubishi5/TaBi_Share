<p>検索</p>
<%= form_with url: user_keyword_search_path, method: :get, local: true do %>
  <%= text_field_tag :search, '', placeholder: "キーワード" %>
  <%= submit_tag '検索', name: nil %>
<% end %>

<h1>ジャンル検索</h1>
<% @genres.each do |genre| %>
  <%= link_to  genre.name, user_genre_search_path(search: genre.id) %><br>
<% end %>

<h1>利用シーン検索</h1>
<% @scenes.each do |scene| %>
  <%= link_to  scene.name, user_scene_search_path(search: scene.id) %><br>
<% end %>


<h1>ランキング(いいね数)</h1>
<table class="table table-hover">
	<thead>
		<tr>
			<th>地名・施設名</th>
			<th>紹介文</th>
			<th>ジャンル</th>
			<th>利用シーン</th>
      <th>住所</th>
			<th></th>
			<th></th>
		</tr>
	</thead>

	<tbody>
		<% @tourist_spots_rank.each do |tourist_spot| %>
		<tr>
			<td><%= link_to tourist_spot.name, user_tourist_spot_path(tourist_spot) %></td>
			<td><%= tourist_spot.introduction %></td>
			<td><%= tourist_spot.genre.name %></td>
			<td><%= tourist_spot.scene.name %></td>
      <td><%= tourist_spot.full_address %></td>
			<td>
				<% if tourist_spot.favorited_by?(current_user) %>
					<%= link_to "行きたい！から削除 (#{tourist_spot.favorites.count})", user_tourist_spot_favorites_path(tourist_spot), method: :delete %>
				<% else %>
					<%= link_to "行きたい！", user_tourist_spot_favorites_path(tourist_spot), method: :post %>
				<% end %>
			</td>
			<td>
				<% if tourist_spot.wented_by?(current_user) %>
					<%= link_to "行った！から削除", user_tourist_spot_wents_path(tourist_spot), method: :delete %>
				<% else %>
					<%= link_to "行った！", user_tourist_spot_wents_path(tourist_spot), method: :post %>
				<% end %>
			</td>
		</tr>
		<% end %>
	</tbody>
</table>

<div id='map'></div>

<style>
#map {
  height: 600px;
  width: 600px;
}
</style>

<script>
	let map;
	let marker = [];
	let infoWindow = [];
	let markerData = gon.tourist_spots;

	function initMap() {
    navigator.geolocation.getCurrentPosition(function(position) {
      LatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

		// 地図の作成
		console.log(markerData[0]['latitude']);
				// var mapLatLng = new google.maps.LatLng({lat: position.coords.latitude, lng: position.coords.longitude}); // 緯度経度のデータ作成
			map = new google.maps.Map(document.getElementById('map'), { // #mapに地図を埋め込む
				center: LatLng, // 地図の中心を指定
					zoom: 15 // 地図のズームを指定
			});

		// マーカー毎の処理
		for (var i = 0; i < markerData.length; i++) {
			let id = markerData[i]['id']

			markerLatLng = new google.maps.LatLng({lat: markerData[i]['latitude'], lng: markerData[i]['longitude']}); // 緯度経度のデータ作成
			marker[i] = new google.maps.Marker({ // マーカーの追加
				position: markerLatLng, // マーカーを立てる位置を指定
				map: map // マーカーを立てる地図を指定
			});

			infoWindow[i] = new google.maps.InfoWindow({ // 吹き出しの追加
				content: `<a href='/user/tourist_spots/${id}'>詳細を見る</a>` + markerData[i]['name'] // 吹き出しに表示する内容
			});

				markerEvent(i); // マーカーにクリックイベントを追加
		}
	})}

	// マーカーにクリックイベントを追加
	function markerEvent(i) {
			marker[i].addListener('click', function() { // マーカーをクリックしたとき
				infoWindow[i].open(map, marker[i]); // 吹き出しの表示
		});
	}
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCErCcqk6eIxWC2DG4pgYLGfgwnfpAjAVo&callback=initMap" async defer></script>