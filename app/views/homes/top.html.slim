= provide(:title, 'トップ')

.row
  .col-xs-7
    .row
      .page-header
        h3
          | ジャンルから探す
      - @genres.each do |genre|
        .col-xs-4
          = link_to user_tourist_spot_genre_search_path(search: genre.id) do
            = attachment_image_tag genre, :image, fallback: 'no_image.png', class: 'img-responsive img-rounded img-hover top-image'
            p
              = genre.name

    .row
      .page-header
        h3
          | 利用シーンから探す

      - @scenes.each do |scene|
        .col-xs-4
          = link_to user_tourist_spot_scene_search_path(search: scene.id) do
            = attachment_image_tag scene, :image, fallback: 'no_image.png', class: 'img-responsive img-rounded img-hover top-image'
            p
              = scene.name

    .row
      .page-header
        h3
          | 都道府県から探す

      - JpPrefecture::Prefecture.all.each do |prefecture|
        .col-xs-4
          = link_to user_tourist_spot_prefecture_search_path(search: prefecture.code) do
            = image_tag "prefectures/#{ prefecture.name }.jpg", size: '100x100', class: 'img-responsive img-rounded img-hover top-image'
          p
            = prefecture.name

  .col-xs-1

  .col-xs-4
    = render 'sidebar', tourist_spots: @tourist_spots,
                        tags: @tags,
                        reviews: @reviews,
                        users: @users,
                        my_rank: @my_rank

.row
  .page-header
    h3
      | 周辺の観光地

  #map style='height: 800px; width: 100%;'

  - google_api = "https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_MAP_API']}&callback=initMap".html_safe
  script{ async src=google_api }

  javascript:

    let map;
    let marker = [];
    let infoWindow = [];
    let markerData = gon.tourist_spots;

    function initMap() {
      navigator.geolocation.getCurrentPosition(function (position) {
        LatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

        // 地図の作成
        map = new google.maps.Map(document.getElementById('map'), { // #mapに地図を埋め込む
          center: LatLng, // 地図の中心を指定
          zoom: 15 // 地図のズームを指定
        });

        // マーカー毎の処理
        for (var i = 0; i < markerData.length; i++) {
          let id = markerData[i]['id']

          markerLatLng = new google.maps.LatLng({
            lat: markerData[i]['latitude'],
            lng: markerData[i]['longitude']
          }); // 緯度経度のデータ作成
          marker[i] = new google.maps.Marker({ // マーカーの追加
            position: markerLatLng, // マーカーを立てる位置を指定
            map: map // マーカーを立てる地図を指定
          });

          infoWindow[i] = new google.maps.InfoWindow({ // 吹き出しの追加
            content: `<a href='/user/tourist_spots/${id}'>詳細を見る</a>` + markerData[i]['name'] // 吹き出しに表示する内容
          });

          markerEvent(i); // マーカーにクリックイベントを追加
        }
      })
    }

    // マーカーにクリックイベントを追加
    function markerEvent(i) {
      marker[i].addListener('click', function () { // マーカーをクリックしたとき
        infoWindow[i].open(map, marker[i]); // 吹き出しの表示
      });
    }