= provide(:title, 'トップ')

.row
  .col-xs-7

    #genre-search
    .row
      .page-header
        h3
          i.fas.fa-list-ul
          |  ジャンルから探す
      - @genres.each do |genre|
        .col-xs-4
          = link_to user_tourist_spot_genre_search_path(genre_search: genre.id) do
            = attachment_image_tag genre, :image, fallback: 'others/no_image.png', class: 'img-responsive img-rounded img-hover top-image'
          p
            = genre.name
          br

    #scene-search
    .row
      .page-header
        h3
          i.fas.fa-bullseye
          |  利用シーンから探す

      - @scenes.each do |scene|
        .col-xs-4
          = link_to user_tourist_spot_scene_search_path(scene_search: scene.id) do
            = attachment_image_tag scene, :image, fallback: 'others/no_image.png', class: 'img-responsive img-rounded img-hover top-image'
          p
            = scene.name
          br

    #prefecture-search
    .row
      .page-header
        h3
          i.fas.fa-globe-asia
          |  都道府県から探す

      - JpPrefecture::Prefecture.all.each do |prefecture|
        .col-xs-4
          = link_to user_tourist_spot_prefecture_search_path(prefecture_search: prefecture.code) do
            = image_tag "prefectures/#{ prefecture.name }.jpg", class: 'img-responsive img-rounded img-hover top-image'
          p
            = prefecture.name
          br

  .col-xs-1

  .col-xs-4
    = render 'sidebar', tourist_spots_fav: @tourist_spots_fav,
                        tourist_spots_pv: @tourist_spots_pv,
                        tags: @tags,
                        reviews: @reviews,
                        users: @users
#location-search
.row
  .page-header
    h3
      i.fas.fa-map-marker-alt
      |  現在地から探す

  #map style='height: 800px; width: 100%;'

  - google_api = "https://maps.googleapis.com/maps/api/js?key=#{ ENV['GOOGLE_MAP_API'] }&callback=initMap".html_safe
  script{ async src=google_api }

  javascript:

    let map;
    let marker = [];
    let infoWindow = [];
    let markerData = gon.tourist_spots;

    function initMap() {
      // 位置情報を取得
      navigator.geolocation.getCurrentPosition(function (position) {
        LatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

        // 取得した位置情報を中心に表示
        map = new google.maps.Map(document.getElementById('map'), {
          center: LatLng,
          zoom: 15
        });

        // 繰り返し処理でマーカーと吹き出しを複数表示
        for (var i = 0; i < markerData.length; i++) {
          let id = markerData[i]['id']

          // 各地点にマーカーを立てる
          markerLatLng = new google.maps.LatLng({
            lat: markerData[i]['latitude'],
            lng: markerData[i]['longitude']
          });
          marker[i] = new google.maps.Marker({
            position: markerLatLng,
            map: map
          });

          // 各地点の吹き出しを作成
          infoWindow[i] = new google.maps.InfoWindow({
            // 吹き出しに表示する内容
            content: `<a href='/user/tourist_spots/${id}'>詳細を見る</a>` + markerData[i]['name']
          });

          // マーカーにクリックイベントを追加
          markerEvent(i);
        }
      })
    }

    // マーカーをクリックすると吹き出しが表示される
    function markerEvent(i) {
      marker[i].addListener('click', function () {
        infoWindow[i].open(map, marker[i]);
      });
    }

= javascript_include_tag 'scroll.js'